{"version":3,"sources":["utils.js","Components/Login.js","Components/Register.js","Components/Favorites.js","Components/CustomSearch.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","login","credential","fetch","method","headers","credentials","body","JSON","stringify","then","response","status","Error","json","registerUrl","register","data","logoutUrl","logout","topGamesUrl","getTopGames","getGameDetailsUrl","searchGameByIdUrl","searchGameById","gameId","searchGameByName","gameName","getGameDetails","id","favoriteItemUrl","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","Login","state","displayModal","onFinish","values","console","log","res","setState","props","onSuccess","message","success","name","catch","err","error","signinOnClick","handleCancel","this","shape","onClick","style","marginRight","title","visible","onCancel","footer","destoryOnClose","preserve","Item","rules","required","prefix","UserOutlined","className","placeholder","LockOutlined","type","htmlType","Component","Register","signupOnClick","SubMenu","Menu","MenuKey","Favorites","displayDrawer","onDrawerClose","onFavoriteClick","VIDEO","STREAM","CLIP","icon","StarFilled","placement","width","onClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","map","item","href","url","target","rel","broadcaster_name","YoutubeOutlined","VideoCameraOutlined","CustomSearch","searchOnClick","onSubmit","game_name","SearchOutlined","marginLeft","marginTop","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","StarOutlined","favItem","favorite","addFavoriteItem","overflow","textOverflow","renderCardGrid","grid","xs","sm","md","lg","xl","dataSource","renderItem","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favoriteOnChange","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Header","Layout","Sider","Content","App","topGames","signinOnSuccess","signoutOnClick","componentDidMount","customSearchOnSuccess","onGameSelect","key","justify","display","onSelect","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","padding","margin","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f939b6b.chunk.js","sourcesContent":["const SERVER_ORIGIN = '';\n\n// login api\nconst loginUrl = `${SERVER_ORIGIN}/login`;\n\n// credential => username + password\nexport const login = credential => {\n    return fetch(loginUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(credential)\n    }).then(response => {\n        if (response.status != 200) {\n            throw Error('Fail to log in');\n        }\n        return response.json();\n    })\n}\n\n// register api\nconst registerUrl = `${SERVER_ORIGIN}/register`;\n\nexport const register = data => {\n    return fetch(registerUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    }).then(response => {\n        if (response.status != 200) {\n            throw Error('Fail to register');\n        }\n    })\n}\n\n// logout api\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\n\nexport const logout = () => {\n    return fetch(logoutUrl, {\n        method: 'POST',\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to log out');\n        }\n    })\n}\n\n// topGame api\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\n\nexport const getTopGames = () => {\n    return fetch(topGamesUrl).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get top games');\n        }\n\n        return response.json();\n    })\n}\n\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\n\nconst getGameDetails = (gameName) => {\n    return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game');\n        }\n\n        return response.json();\n    });\n}\n\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\n\nexport const searchGameById = (gameId) => {\n    return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game');\n        }\n        return response.json();\n    })\n}\n\nexport const searchGameByName = (gameName) => {\n    return getGameDetails(gameName).then((data) => {\n        if (data && data.id) {\n            return searchGameById(data.id);\n        }\n\n        throw Error('Fail to find the game')\n    })\n}\n\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\n\nexport const addFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ favorite: favItem })\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to add favorite item');\n        }\n    })\n}\n\nexport const deleteFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ favorite: favItem })\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to delete favorite item');\n        }\n    })\n}\n\nexport const getFavoriteItem = () => {\n    return fetch(favoriteItemUrl, {\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get favorite item');\n        }\n\n        return response.json();\n    })\n}\n\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\n\nexport const getRecommendations = () => {\n    return fetch(getRecommendedItemsUrl, {\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get recommended item');\n        }\n\n        return response.json();\n    })\n}\n","import React, {Component} from 'react';\nimport { Modal, Button, Form, Input, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { login } from '../utils';\n\nclass Login extends Component {\n    state = {\n        displayModal: false\n    }\n\n    render() {\n        const { displayModal } = this.state;\n        return (\n            <div>\n                <Button shape=\"round\"\n                        onClick={this.signinOnClick}\n                        style={{ marginRight: 20 }}\n                >\n                    Login\n                </Button>\n                <Modal title=\"Log in\"\n                       visible={displayModal}\n                       onCancel={this.handleCancel}\n                       footer={null}\n                       destoryOnClose={true}\n                >\n                    <Form\n                        name=\"normal_login\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your Username!',\n                                },\n                            ]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your Password!',\n                                },\n                            ]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Log in\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n\n    onFinish = (values) => {\n        // 1. collect username/password from the form\n        // 2. send data to the server\n        console.log('Received values of form: ', values);\n        login(values)\n            .then( res => {\n                // close the modal\n                this.setState({ displayModal: false })\n\n                // inform App.js the login status\n                this.props.onSuccess();\n                message.success(`Welcome, ${res.name}`)\n            })\n            .catch( err => {\n                message.error(err.message)\n            })\n    };\n\n    signinOnClick = () => {\n        // displayModal => true\n        this.setState({ displayModal: true });\n    }\n\n    handleCancel = () => {\n        // displayModal => false\n        this.setState({ displayModal: false });\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport { Modal, Button, Form, Input, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { register } from \"../utils\";\n\nclass Register extends Component {\n    state = {\n        displayModal: false\n    }\n\n    render() {\n        const { displayModal } = this.state;\n        return (\n            <div>\n                <Button shape=\"round\"\n                        type=\"primary\"\n                        onClick={this.signupOnClick}\n                        style={{ marginRight: 20 }}\n                >\n                    Register\n                </Button>\n                <Modal title=\"Register\"\n                       visible={displayModal}\n                       onCancel={this.handleCancel}\n                       footer={null}\n                       destoryOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your Username!',\n                                },\n                            ]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your Password!',\n                                },\n                            ]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"first_name\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your Firstname!',\n                                },\n                            ]}\n                        >\n                            <Input\n                                placeholder=\"firstname\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"last_name\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your Lastname!',\n                                },\n                            ]}\n                        >\n                            <Input\n                                placeholder=\"lastname\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Register\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n\n    onFinish = (values) => {\n        // 1. collect username/password/firstname/lastname from the form\n        // 2. send data to the server\n        console.log('Received values of form: ', values);\n        register(values)\n            .then( res => {\n                // close the modal\n                this.setState({ displayModal: false })\n                message.success('Register Successfully!')\n            })\n            .catch( err => {\n                message.error(err.message)\n            })\n    };\n\n    signupOnClick = () => {\n        // displayModal => true\n        this.setState({ displayModal: true });\n    }\n\n    handleCancel = () => {\n        // displayModal => false\n        this.setState({ displayModal: false });\n    }\n}\n\nexport default Register;","import React, {Component} from 'react';\nimport { Menu, Button, Drawer, message } from 'antd';\nimport { EyeOutlined, YoutubeOutlined, VideoCameraOutlined, StarFilled } from '@ant-design/icons';\nimport { getFavoriteItem } from '../utils';\n\nconst { SubMenu } = Menu;\nconst MenuKey = {\n    Streams: 'streams',\n    Videos: 'videos',\n    Clips: 'clips'\n}\n\nclass Favorites extends Component {\n    state = {\n        displayDrawer: false,\n    }\n\n    onDrawerClose = () => {\n        this.setState({\n            displayDrawer: false,\n        })\n    }\n\n    onFavoriteClick = () => {\n        this.setState({\n            displayDrawer: true,\n        })\n    }\n\n    render() {\n        const { VIDEO, STREAM, CLIP } = this.props.data;\n\n        return (\n            <div>\n                <Button type=\"primary\"\n                        shape=\"round\"\n                        onClick={this.onFavoriteClick}\n                        icon={<StarFilled />}\n                >\n                    My Favorites\n                </Button>\n                <Drawer\n                    title=\"My Favorites\"\n                    placement=\"right\"\n                    width={720}\n                    visible={this.state.displayDrawer}\n                    onClose={this.onDrawerClose}\n                >\n                    <Menu\n                        mode=\"inline\"\n                        defaultOpenKeys={[MenuKey.Streams]}\n                        style={{ height: '100%', borderRight: 0 }}\n                        selectable={false}\n                    >\n                        <SubMenu key={MenuKey.Streams} icon={<EyeOutlined />} title=\"Streams\">\n                            {\n                                STREAM.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Videos} icon={<YoutubeOutlined />} title=\"Videos\">\n                            {\n                                VIDEO.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Clips} icon={<VideoCameraOutlined />} title=\"Clips\">\n                            {\n                                CLIP.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default Favorites;","import React, {Component} from 'react';\nimport { Button, Form, Input, message, Modal } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { searchGameByName } from '../utils';\n\nclass CustomSearch extends Component {\n    state = {\n        displayModal: false\n    }\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        })\n    }\n\n    searchOnClick = () => {\n        this.setState({\n            displayModal: true,\n        })\n    }\n\n    onSubmit = (data) => {\n        searchGameByName(data.game_name)\n            .then((data) => {\n                this.setState({\n                    displayModal: false,\n                })\n                this.props.onSuccess(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    render() {\n        return (\n            <>\n                <Button shape=\"round\"\n                        onClick={this.searchOnClick}\n                        icon={<SearchOutlined />}\n                        style={{ marginLeft: '20px', marginTop: '20px'}}\n                >\n                    Custom Search\n                </Button>\n                <Modal\n                    title=\"Custom Search\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    <Form\n                        name=\"custom_search\"\n                        onFinish={this.onSubmit}\n                    >\n                        <Form.Item\n                            name=\"game_name\"\n                            rules={[{ required: true, message: 'Please enter a game name' }]}\n                        >\n                            <Input placeholder=\"Game name\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Search</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default CustomSearch;","import React, {Component} from 'react';\nimport { Button, Card, List, Tabs, Tooltip, message } from 'antd';\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\n\nconst {TabPane} = Tabs;\nconst tabKeys = {\n    Streams: 'stream',\n    Videos: 'videos',\n    Clips: 'clips',\n}\n\nconst processUrl = (url) => url\n    .replace('%{height}', '252')\n    .replace('%{width}', '480')\n    .replace('{height}', '252')\n    .replace('{width}', '480');\n\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\n    const title = `${item.broadcaster_name} - ${item.title}`;\n\n    const isFav = favs.find((fav) => fav.id === item.id);\n\n    const favOnClick = () => {\n        if (isFav) {\n            deleteFavoriteItem(item).then(() => {\n                favOnChange();\n            }).catch(err => {\n                message.error(err.message)\n            })\n\n            return;\n        }\n\n        addFavoriteItem(item).then(() => {\n            favOnChange();\n        }).catch(err => {\n            message.error(err.message)\n        })\n    }\n\n    return (\n        <>\n            {\n                loggedIn &&\n                <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\n                    <Button shape=\"circle\" icon={isFav ? <StarFilled /> : <StarOutlined />} onClick={favOnClick} />\n                </Tooltip>\n            }\n            <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\n                <Tooltip title={title}>\n                    <span>{title}</span>\n                </Tooltip>\n            </div>\n        </>\n    )\n}\n\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n    return (\n        <List\n            grid={{\n                xs: 1,\n                sm: 2,\n                md: 4,\n                lg: 4,\n                xl: 6,\n            }}\n            dataSource={data}\n            renderItem={item => (\n                <List.Item style={{ marginRight: '20px' }}>\n                    <Card\n                        title={renderCardTitle(item, loggedIn, favs, favOnChange)}\n                    >\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img\n                                alt=\"Placeholder\"\n                                src={processUrl(item.thumbnail_url)}\n                            />\n                        </a>\n                    </Card>\n                </List.Item>\n            )}\n        />\n    )\n}\n\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\n\n    const { VIDEO, STREAM, CLIP } = resources;\n    const { VIDEO: favVideos, STREAM: favStreams, CLIP: favClips} = favoriteItems;\n\n    return (\n        <Tabs\n            defaultActiveKey={tabKeys.Streams}\n        >\n            <TabPane\n                tab=\"Streams\"\n                key={tabKeys.Streams}\n                style={{height: '680px', overflow: 'auto'}}\n                forceRender={true}>\n                {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\n            </TabPane>\n\n            <TabPane\n                tab=\"Videos\"\n                key={tabKeys.Videos}\n                style={{height: '680px', overflow: 'auto'}}\n                forceRender={true}>\n                {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\n            </TabPane>\n\n            <TabPane tab=\"Clips\"\n                     key={tabKeys.Clips}\n                     style={{height: '680px', overflow: 'auto'}}\n                     forceRender={true}>\n                {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\n            </TabPane>\n        </Tabs>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Layout, Row, Col, Button, message, Menu } from 'antd';\nimport Login from './Components/Login';\nimport Register from \"./Components/Register\";\nimport Favorites from \"./Components/Favorites\";\nimport CustomSearch from \"./Components/CustomSearch\";\nimport Home from \"./Components/Home\";\nimport { getRecommendations, getTopGames, logout, searchGameById, getFavoriteItem } from './utils';\nimport { LikeOutlined, FireOutlined } from '@ant-design/icons';\n\nconst {Header, Sider, Content} = Layout;\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n    state = {\n        loggedIn: false,\n        topGames: [],\n        resources: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n        favoriteItems: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n    }\n\n    render() {\n        const { loggedIn } = this.state;\n\n        return (\n            <Layout>\n                <Header>\n                    <Row justify=\"space-between\">\n                        <Col>\n                            {\n                                loggedIn &&\n                                <Favorites data={this.state.favoriteItems} />\n                            }\n                        </Col>\n                        <Col>\n                            {\n                                // case1: user logged in\n                                // case2: user hasn't logged in\n                                loggedIn\n                                    ?\n                                    <Button shape=\"round\" onClick={this.signoutOnClick}>\n                                        Logout\n                                    </Button>\n                                    :\n                                    <div style={{ display: 'flex' }}>\n                                        <Login onSuccess={this.signinOnSuccess} />\n                                        <Register />\n                                    </div>\n                            }\n                        </Col>\n                    </Row>\n                </Header>\n                <Layout>\n                    <Sider width={300} className=\"site-layout-background\">\n                        <CustomSearch onSuccess={this.customSearchOnSuccess} />\n                        <Menu\n                            mode=\"inline\"\n                            onSelect={this.onGameSelect}\n                            style={{ marginTop: '10px' }}\n                        >\n                            <Menu.Item icon={<LikeOutlined />} key=\"Recommendation\">\n                                Recommend for you!\n                            </Menu.Item>\n                            <SubMenu icon={<FireOutlined />} key=\"Popular Games\" title=\"Popular Games\" className=\"site-top-game-list\" >\n                                {\n                                    this.state.topGames.map((game) => {\n                                        return (\n                                            <Menu.Item key={game.id} style={{ height: '50px' }}>\n                                                <img\n                                                    alt=\"Placeholder\"\n                                                    src={game.box_art_url.replace('{height}', '40').replace('{width}', '40')}\n                                                    style={{ borderRadius: '50%', marginRight: '20px' }}\n                                                />\n                                                <span>\n                                                    {game.name}\n                                                </span>\n                                            </Menu.Item>\n                                        )\n                                    })\n                                }\n                            </SubMenu>\n                        </Menu>\n                    </Sider>\n                    <Layout style={{padding: 24}}>\n                        <Content className=\"site-layout-background\" style={{\n                            padding: 24,\n                            margin: 0,\n                            height: 800,\n                            overflow: 'auto'\n                        }}\n                        >\n                            <Home\n                                resources={this.state.resources}\n                                loggedIn={this.state.loggedIn}\n                                favoriteItems={this.state.favoriteItems}\n                                favoriteOnChange={this.favoriteOnChange}\n                            />\n                        </Content>\n                    </Layout>\n                </Layout>\n            </Layout>\n        )\n    }\n\n    signinOnSuccess = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    signoutOnClick = () => {\n        logout()\n            .then(() => {\n                this.setState({\n                    loggedIn: false\n                })\n                message.success(`Successfull signed out`);\n            }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    componentDidMount = () => {\n        getTopGames()\n            .then((data) => {\n                this.setState({\n                    topGames: data\n                })\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    customSearchOnSuccess = (data) => {\n        this.setState({\n            resources: data,\n        })\n    }\n\n    onGameSelect = ({ key }) => {\n        if (key === 'Recommendation') {\n            getRecommendations().then((data) => {\n                this.setState({\n                    resources: data,\n                })\n            })\n\n            return;\n        }\n\n        searchGameById(key).then((data) => {\n            this.setState({\n                resources: data,\n            })\n        })\n    }\n\n    favoriteOnChange = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}